{"version":3,"file":"src_app_User_profile_profile_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACc;AAEV;AAE7C,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,sDAAW;KACvB;CACF,CAAC;IAMW,wBAAwB,SAAxB,wBAAwB;;AAAxB,wBAAwB;IAJpC,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,yDAAY,CAAC;KACxB,CAAC;GACW,wBAAwB;AAAA;;;;;;;;;;;;;;;;;;;;;;;AChBI;AACM;AACmB;AAErB;AAEuB;AAEvB;IAYhC,iBAAiB,SAAjB,iBAAiB;;AAAjB,iBAAiB;IAV7B,uDAAQ,CAAC;QACR,OAAO,EAAE;YACP,yDAAY;YACZ,uDAAW;YACX,+DAAmB;YACnB,uDAAW;YACX,6EAAwB;SACzB;QACD,YAAY,EAAE,CAAC,sDAAW,CAAC;KAC5B,CAAC;GACW,iBAAiB;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;ACpBoB;AACM;AAC+B;AAC1B;IAOhD,WAAW,SAAX,WAAW;IAatB,YAAmB,YAAiC,EAAU,WAAwB;QAAnE,iBAAY,GAAZ,YAAY,CAAqB;QAAU,gBAAW,GAAX,WAAW,CAAa;QAV/E,mBAAc,GAAc,IAAI,qDAAS,CAAC;YAC/C,WAAW,EAAE,IAAI,uDAAW,CAAC,EAAE,CAAC;YAChC,WAAW,EAAE,IAAI,uDAAW,CAAC,EAAE,CAAC;YAChC,KAAK,EAAE,IAAI,uDAAW,CAAC,EAAE,CAAC;YAC1B,iCAAiC;YACjC,OAAO,EAAE,IAAI,uDAAW,CAAC,EAAE,CAAC;YAC5B,MAAM,EAAE,IAAI,uDAAW,CAAC,EAAE,CAAC;YAC3B,WAAW,EAAE,IAAI,uDAAW,CAAC,EAAE,CAAC;SACjC,CAAC,CAAC;IAEuF,CAAC;IAE3F,QAAQ;QACN,OAAO,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;YACpD,IAAI,CAAC,MAAM,GAAG,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,GAAG,CAAC;YAAC,IAAI,CAAC,OAAO,EAAE,CAAC;QACzC,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,OAAO;QACb,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAChG,CAAC;IAEM,UAAU;QACf,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;QACvC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;YAC/E,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACL,CAAC;;;;;;AA9BU,WAAW;IALvB,wDAAS,CAAC;QACT,QAAQ,EAAE,aAAa;QACvB,oEAAkC;;KAEnC,CAAC;GACW,WAAW;AAAA","sources":["./src/app/User/profile/profile-routing.module.ts","./src/app/User/profile/profile.module.ts","./src/app/User/profile/profile.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ProfilePage } from './profile.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ProfilePage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ProfilePageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { ProfilePageRoutingModule } from './profile-routing.module';\r\n\r\nimport { ProfilePage } from './profile.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    IonicModule,\r\n    ProfilePageRoutingModule\r\n  ],\r\n  declarations: [ProfilePage]\r\n})\r\nexport class ProfilePageModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { DataProviderService } from 'src/services/Data-Provider/data-provider.service';\r\nimport { UserService } from 'src/services/User/user.service';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.page.html',\r\n  styleUrls: ['./profile.page.scss'],\r\n})\r\nexport class ProfilePage implements OnInit {\r\n\r\n  public userId: any;\r\n  public updateUserForm: FormGroup = new FormGroup({\r\n    displayName: new FormControl(''),\r\n    phoneNumber: new FormControl(''),\r\n    email: new FormControl(''),\r\n    // photoURL: new FormControl(''),\r\n    address: new FormControl(''),\r\n    gender: new FormControl(''),\r\n    dateOfBirth: new FormControl(''),\r\n  });\r\n\r\n  constructor(public dataProvider: DataProviderService, private userService: UserService) { }\r\n\r\n  ngOnInit() {\r\n    return this.userService.getUserData.subscribe((res) => {\r\n      this.userId = res?.uid; this.getUser();\r\n    });\r\n  }\r\n\r\n  private getUser() {\r\n    this.userService.getUser(this.userId).then((res) => { this.dataProvider.user = res.data(); });\r\n  }\r\n\r\n  public updateUser() {\r\n    console.log(this.updateUserForm.value);\r\n    this.userService.updateUser(this.userId, this.updateUserForm.value).then((res) => {\r\n      console.log(res);\r\n    });\r\n  }\r\n\r\n\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}